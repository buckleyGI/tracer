<?xml version="1.0"?>
<package>
  <metadata>
    <id>Tracer.Fody</id>
    <version>1.3.0</version>
    <authors>csnemes</authors>
    <owners>csnemes</owners>
    <projectUrl>https://github.com/csnemes/tracer</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Trace.Fody is an ILWeaver which adds trace enter and leave log entries to methods. Besides it rewrites static log calls to
    instance calls adding method information to the call in order to avoid costly stack walks in the logger. This is a general rewriter which can be adapted to different logging frameworks, do not use it directly.
	Use one of the existing adapters in your project like Tracer.Log4Net.Fody or build your own.</description>
    <summary>ILWeaver for adding trace log entries and rewrite static log calls. Do NOT use this package directly, use one of its adapters like Tracer.Log4Net.Fody</summary>
    <copyright>Copyright 2016</copyright>
    <tags>Fody, Logging, Tracing, ILWeaving, Cecil</tags>
	<developmentDependency>true</developmentDependency>
    <dependencies>
      <group>
        <dependency id="Fody" version="1.29.4" />
      </group>
    </dependencies>
    <references />
	<releaseNotes>
* 1.0.0 
    Initial release 
* 1.1.0 
    - Trace leave now logs when a method is exited with an exception 
    - Bug fix on static log rewrites 
    - Tracer now creates verifiable code 
* 1.1.1 
    - Fixed static log rewrite for constructors and closures/lambdas 
* 1.2.0 
    - In the configuration TraceOn target value extended with 'none' which means no tracing by default 
    - Changed TraceLeave signature to receive start and end ticks instead of elapsed ticks 
* 1.2.2 
	- Updated to Fody 1.29.4 	
* 1.2.3
	- Added support for strong named custom adapter assemblies
* 1.2.4
	- Added option to trace log constructors with traceConstructors flag. 
* 1.3.0
    - Static log rewrite now supports rewriting static property getters (e.g one can use Log.IsDebug to avoid costly calls)
    - Fix: Static constructors are excluded from tracing
    - Assembly level xml trace configuration is extended. Multiple TraceOn and NoTrace elements can be specified. Both supports
    namespace attribute which defines the scope of the configuration set. See documentation for more details.
    - property getter/setter rewriting can be turned off using traceProperties flag in xml configuration
    - NoTrace and TraceOn attributes now can be also applied on properties
	</releaseNotes>
  </metadata>
  <files>
    <file src="Tracer.Fody.dll" target="" />
  </files>
</package>
